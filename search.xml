<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/05/22/hello-world/"/>
      <url>/2022/05/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>code test</title>
      <link href="/2022/05/22/codes/code-test/"/>
      <url>/2022/05/22/codes/code-test/</url>
      
        <content type="html"><![CDATA[<h1 id="标题1："><a href="#标题1：" class="headerlink" title="标题1："></a>标题1：</h1><h2 id="ssaa"><a href="#ssaa" class="headerlink" title="ssaa"></a>ssaa</h2><p>sasas</p><h1 id="标题2："><a href="#标题2：" class="headerlink" title="标题2："></a>标题2：</h1><p>@</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> altair <span class="keyword">as</span> alt</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># In the code, the names of variable refer to the above mathematical derivation</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_derivative_decorator</span>(<span class="params">func, delta = <span class="number">0.001</span></span>):</span><br><span class="line">    <span class="comment"># This is a decorator, for calculating derivative </span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>(<span class="params">*args, **kwargs</span>):    </span><br><span class="line">        x0 = args[<span class="number">0</span>]</span><br><span class="line">        x2 = x0 + delta</span><br><span class="line">        y2 = func(x2, **kwargs)</span><br><span class="line">        </span><br><span class="line">        x1 = x0 - delta</span><br><span class="line">        y1 = func(x1, **kwargs)</span><br><span class="line"></span><br><span class="line">        derivative = (y2 -y1)/(x2-x1)</span><br><span class="line">        result = func(*args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> derivative</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_P_win_a_game</span>(<span class="params">p, if_tie_break =<span class="literal">False</span></span>): </span><br><span class="line">    p_win_deduce = p**<span class="number">2</span> / ( <span class="number">1</span> - <span class="number">2</span> * p * ( <span class="number">1</span> - p ) )</span><br><span class="line">    p_game_d = ( <span class="number">20</span> * p**<span class="number">5</span> * (<span class="number">1</span>-p)**<span class="number">3</span> ) / ( <span class="number">1</span> - <span class="number">2</span> * p * (<span class="number">1</span>-p) )</span><br><span class="line">    <span class="keyword">if</span> if_tie_break == <span class="literal">False</span>:</span><br><span class="line">        p_win_a_game = p**<span class="number">4</span> + <span class="number">4</span> * p**<span class="number">4</span> * (<span class="number">1</span>-p) + <span class="number">10</span> * p**<span class="number">4</span> * (<span class="number">1</span>-p)**<span class="number">2</span> + p_game_d</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p_win_a_game = np.<span class="built_in">sum</span>([p**<span class="number">7</span>,</span><br><span class="line">                               <span class="number">7</span> * p**<span class="number">7</span> * (<span class="number">1</span>-p),</span><br><span class="line">                               <span class="number">28</span> * p**<span class="number">7</span> * (<span class="number">1</span>-p)**<span class="number">2</span>,</span><br><span class="line">                               <span class="number">84</span> * p**<span class="number">7</span> * (<span class="number">1</span>-p)**<span class="number">3</span>,</span><br><span class="line">                               <span class="number">210</span> * p**<span class="number">7</span> * (<span class="number">1</span>-p)**<span class="number">4</span>,</span><br><span class="line">                               <span class="number">462</span> * p**<span class="number">7</span> * (<span class="number">1</span>-p)**<span class="number">5</span>,</span><br><span class="line">                               <span class="number">924</span> * p**<span class="number">6</span> * (<span class="number">1</span>-p)**<span class="number">6</span> * p_win_deduce]) </span><br><span class="line">    <span class="keyword">return</span>( p_win_a_game )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_P_win_a_set</span>(<span class="params">p, <span class="built_in">type</span>=<span class="string">&#x27;all&#x27;</span></span>):</span><br><span class="line">    q = calculate_P_win_a_game(p)</span><br><span class="line">    p_win_tie_break = calculate_P_win_a_game(p, if_tie_break=<span class="literal">True</span>)</span><br><span class="line">    p_set_60 = q**<span class="number">6</span></span><br><span class="line">    p_set_61 = <span class="number">6</span>* q**<span class="number">6</span> * (<span class="number">1</span>-q)</span><br><span class="line">    p_set_62 = <span class="number">21</span>* q**<span class="number">6</span> * (<span class="number">1</span>-q)**<span class="number">2</span></span><br><span class="line">    p_set_63 = <span class="number">56</span>* q**<span class="number">6</span> * (<span class="number">1</span>-q)**<span class="number">3</span></span><br><span class="line">    p_set_64 = <span class="number">126</span>* q**<span class="number">6</span> * (<span class="number">1</span>-q)**<span class="number">4</span></span><br><span class="line">    p_set_75 = <span class="number">252</span>* q**<span class="number">7</span> * (<span class="number">1</span>-q)**<span class="number">5</span></span><br><span class="line">    p_set_76 = <span class="number">504</span>* q**<span class="number">6</span> * (<span class="number">1</span>-q)**<span class="number">6</span> * p_win_tie_break</span><br><span class="line">    p_set_all = p_set_60 + p_set_61 + p_set_62 + p_set_63 + p_set_64 + p_set_75 +p_set_76</span><br><span class="line">    d = &#123;<span class="string">&#x27;6:0&#x27;</span>:p_set_60, </span><br><span class="line">         <span class="string">&#x27;6:1&#x27;</span>:p_set_61,</span><br><span class="line">         <span class="string">&#x27;6:2&#x27;</span>:p_set_62,</span><br><span class="line">         <span class="string">&#x27;6:3&#x27;</span>:p_set_63,</span><br><span class="line">         <span class="string">&#x27;6:4&#x27;</span>:p_set_64,</span><br><span class="line">         <span class="string">&#x27;7:5&#x27;</span>:p_set_75,</span><br><span class="line">         <span class="string">&#x27;7:6&#x27;</span>:p_set_76,</span><br><span class="line">         <span class="string">&#x27;all&#x27;</span>:p_set_all   &#125;</span><br><span class="line">    <span class="keyword">return</span>(d[<span class="built_in">type</span>])</span><br><span class="line"></span><br><span class="line"><span class="meta">@ calculate_derivative_decorator</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_derivative_P_win_set</span>(<span class="params">p, <span class="built_in">type</span>=<span class="string">&#x27;all&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">return</span>( calculate_P_win_a_set(p, <span class="built_in">type</span>) )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_everything</span>(<span class="params">p_list</span>) -&gt; pd.DataFrame:</span><br><span class="line">    <span class="comment"># the function is like a api for computating everything </span></span><br><span class="line">    x = p_list</span><br><span class="line">    df = pd.DataFrame(&#123;</span><br><span class="line">        <span class="string">&#x27;P_win_set_by_6:0&#x27;</span>: [calculate_P_win_a_set(_, <span class="built_in">type</span>=<span class="string">&#x27;6:0&#x27;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_set_by_6:1&#x27;</span>: [calculate_P_win_a_set(_, <span class="built_in">type</span>=<span class="string">&#x27;6:1&#x27;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_set_by_6:2&#x27;</span>: [calculate_P_win_a_set(_, <span class="built_in">type</span>=<span class="string">&#x27;6:2&#x27;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_set_by_6:3&#x27;</span>: [calculate_P_win_a_set(_, <span class="built_in">type</span>=<span class="string">&#x27;6:3&#x27;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_set_by_6:4&#x27;</span>: [calculate_P_win_a_set(_, <span class="built_in">type</span>=<span class="string">&#x27;6:4&#x27;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_set_by_7:5&#x27;</span>: [calculate_P_win_a_set(_, <span class="built_in">type</span>=<span class="string">&#x27;7:5&#x27;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_set_by_7:6&#x27;</span>: [calculate_P_win_a_set(_, <span class="built_in">type</span>=<span class="string">&#x27;7:6&#x27;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_set&#x27;</span> : [calculate_P_win_a_set(_, <span class="built_in">type</span>=<span class="string">&#x27;all&#x27;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_set_counterparty&#x27;</span> : [calculate_P_win_a_set( <span class="number">1</span> - _, <span class="built_in">type</span>=<span class="string">&#x27;all&#x27;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_game&#x27;</span> : [calculate_P_win_a_game(_) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;P_win_game (tie-break)&#x27;</span> : [calculate_P_win_a_game(_, if_tie_break= <span class="literal">True</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">        <span class="string">&#x27;derivative_P_win_set_by_6:4&#x27;</span>: [ calculate_derivative_P_win_set(_, <span class="built_in">type</span>=<span class="string">&#x27;6:4&#x27;</span>)  <span class="keyword">for</span> _ <span class="keyword">in</span> x],</span><br><span class="line">    &#125;, index=x)</span><br><span class="line">    <span class="keyword">return</span>(df)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
